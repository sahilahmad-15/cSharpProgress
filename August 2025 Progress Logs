===========================
Class Log - 1st August 2025 --- Friday
===========================

Topics Covered
--------------
- Revision of Functions

Brief Description
------------------
Reviewed all three types of functions in C#:
1. Parameter-less functions
2. Parameterized functions
3. Return-type functions

Students refreshed their understanding of how functions help in modularizing code and improving logic reusability.

Examples Solved in Class
-------------------------
- User credentials check
- Reversal of a number
- Word vowel check

Homework
---------
- Revise all function types and their syntax



Students Present
-----------------
- Faizan
- Shaiaan
- Shanib
- Jasira



===========================
Class Log - 2nd August 2025 --- Saturday
===========================

< No Class >



===========================
Class Log - 3rd August 2025 --- Sunday
===========================

< No Class >



===========================
Class Log - 4th August 2025 --- Monday
===========================

Topics Covered
--------------
- Revision of Functions

Brief Description
------------------
Another round of revision on function concepts:
- Reinforced ideas of modular coding
- Usage of return statements
- Combining conditions and logic in functions

Examples Solved in Class
-------------------------
- User credentials check
- Check if number is factorial of 5

Homework
---------
- Revise all function concepts and implementations

Students Present
-----------------
- Faizan
- Shaiaan
- Shanib
- Sahil



===========================
Class Log - 5th August 2025 --- Tuesday
===========================

Topics Covered
--------------
- Introduction to Object-Oriented Programming (OOP) in C#
- Static Storage Class
- Access Modifiers: default, private, public
- Creating Instance using `new` keyword
- Difference between External and Internal Classes

Brief Description
------------------
Started Object-Oriented Programming (OOP) in C#, a powerful programming paradigm that allows data and behavior to be bundled into objects.

Covered:
- **What is OOP?** Expained the need of OOP and how was it introduced
- **Static Storage Class**: Explained how static members work.
- **Access Modifiers**: Compared `default`, `private`, and `public`, and how they control visibility/scope.
- **Creating Objects**: Demonstrated using `new` keyword to create instances.
- **Internal vs External Class**: Explained the concept of defining classes inside/outside a namespace/file and their access implications.

This session was crucial for laying the foundation of real-world coding practices using classes and objects.

Examples Solved in Class
-------------------------
- Created basic class with a method/function
- Demonstrated static vs instance behavior
- Practiced public and private access modifier use
- Discussed external class and it's use-case

Homework
---------
- Revise the concepts of OOP discussed today and make notes

Students Present
-----------------
- Shaiaan
- Faizan
- Jasira
- Sahil



===========================
Class Log - 6th August 2025 --- Wednesday
===========================

Topics Covered
--------------
- Revised the concepts discussed in last class that is about OOPs concepts. 

Brief Description
------------------
- Just revised about the concepts of OOPs like classes, objects, access modifiers, static etc.

Examples Solved in Class
-------------------------
- Normal basic questions on classes like student details simulation etc.

Homework
---------
- Revise what's done in class today.

Students Present
-----------------
- Faizan
- Sahil
- Shanib
- Shaiaan



===========================
Class Log - 7th August 2025 --- Thursday
===========================

Topics Covered
--------------
- Revised the concepts discussed in last class that is about OOPs concepts again. 

Brief Description
------------------
- Just revised about the concepts of OOPs like classes, objects etc again.

Examples Solved in Class
-------------------------
- Question done on "Book shop simulation" where we have to simulate a book shop. A customer can view, borrow and return books.

Homework
---------
- Go deeply through the question done today about "Book Shop Simulation".

Students Present
-----------------
- Faizan
- Sahil
- Shanib
- Shaiaan



===========================
Class Log - 8th August 2025 --- Friday
===========================

Topics Covered
--------------
- Data Encapsulation. 

Brief Description
------------------
- Studied the first pillar of Object Oriented Programming, i.e., "Data Encapsulation". It is a process of encapsulating/bundling properties and methods in a 
class and also, protecting the data from unauthorized access. We make variables private and then to make them accesible outside the class, we make the setter 
and getter functions. Also studied the concept of "This". This is a keyword known as "Access modifier" which is used to access the variables defined globally
in the class. We use it as a convention to differentiate between the names of function variables and class variables. But there is more concepts about "this"
keyword.
So, setters and getters are functions to set and get the values of the private class variables outside the class where it's instance is made.

Examples Solved in Class
-------------------------
- Normal basic questions on classes like student details simulation etc.

Homework
---------
- Revise the concepts of setters and getters (accessors and mutators).

Students Present
-----------------
- Faizan
- Sahil
- Shanib
- Shaiaan



===========================
Class Log - 9th August 2025 --- Saturday
===========================

< no class >



===========================
Class Log - 10th August 2025 --- Sunday
===========================

< no class >



===========================
Class Log - 11th August 2025 --- Monday
===========================

Topics Covered
--------------
- Revised the problems that states how to achieve data encapsulation in C#.
- Constructors.

Brief Description
------------------
- A constructor is a special type of function/method which automatically runs when the object of a class is created.
- It doesn't needs explicit calling.
- It must be having a same name as of class.
- Concept of Method overloading.

Examples Solved in Class
-------------------------
- Normal basic questions on classes like student details simulation etc.

Homework
---------
- Revise the concepts of setters and getters (accessors and mutators).
- Revise the concepts of constructors deeply and discover it's 2 advantages and disadvantages.
- Revise the concepts of method overloading.

Students Present
-----------------
- Faizan
- Shanib
- Shaiaan



===========================
Class Log - 12th August 2025 --- Tuesday
===========================

Topics Covered
--------------
- Revised the problems on accessors and mutators in C#.

Brief Description
------------------
- No explanation, just revised the older topics by solving different problems.

Examples Solved in Class
-------------------------
- Students management system.

Homework
---------
- Revise OOP.

Students Present
-----------------
- Faizan
- Shaiaan
- Shanib
- Sahil



===========================
Class Log - 13th August 2025 --- Wednesday
===========================

Topics Covered
--------------
- 

Brief Description
------------------
- 

Examples Solved in Class
-------------------------
- 

Homework
---------
- Revise OOP.

Students Present
-----------------
- Shaiaan
- Shanib
- Sahil



===========================
Class Log - 14th August 2025 --- Thursday
===========================

Topics Covered
--------------
- Arrays.
- Indexing.
- Length of an array.

Brief Description
------------------
- Arrays are special data type (sometimes referred to data structures) that can hold multiple data of a same data type in a single variable.
- Index of an array in the position of an element in an array. Index starts from 0 upto length - 1.
- Length of an array is the total number of elements in an array.
- e.g.: int[] numbers = {1, 2, 3, 4, 5};
- Their indexing:        0  1  2  3  4
- Their length: 5

Examples Solved in Class
-------------------------
- String related problems like searching a particular value in a string.

Homework
---------
- Revise the string related problems using arrays.

Students Present
-----------------
- Shaiaan
- Shanib
- Sahil
- Faizan



===========================
Class Log - 15th August 2025 --- Friday
===========================

<no class>

===========================
Class Log - 16th August 2025 --- Saturday
===========================

<no class>

===========================
Class Log - 17th August 2025 --- Sunday
===========================

<no class>

===========================
Class Log - 18th August 2025 --- Monday
===========================

Topics Covered
--------------
- Revision of Arrays in C#

Brief Description
------------------
Revised the fundamentals of arrays in C#:
- Declaration and initialization
- Accessing elements using indices
- Iterating arrays with loops
- Common use cases such as storing multiple values of the same type

Examples Solved in Class
-------------------------
- Storing marks of students in an array
- Printing all elements using a for loop
- Summation of all array elements

Homework
---------
- Practice array problems: maximum element, minimum element, average of array.

Students Present
-----------------
- Sahil
- Shanib
- Shaiaan
- Faizan


===========================
Class Log - 19th August 2025 --- Tuesday
===========================

Topics Covered
--------------
- Revision of Arrays (continued)

Brief Description
------------------
Continued revision of arrays. Focused on slightly advanced concepts like:
- Traversing arrays using nested loops
- Practical use cases in problem-solving

Examples Solved in Class
-------------------------
- Increasing/decreasing order

Homework
---------
- Count prime numbers in an array.

Students Present
-----------------
- Faizan
- Shaiaan
- Shanib
- Sahil


===========================
Class Log - 20th August 2025 --- Wednesday
===========================

Topics Covered
--------------
- Introduction to Inheritance in C#
- Concept of Data Encapsulation

Brief Description
------------------
Started OOP feature *Inheritance*.  
- Explained **what inheritance is**: deriving new classes from existing ones.   

This session laid the foundation for advanced OOP concepts.

Examples Solved in Class
-------------------------
- Created a basic `Parent` and `Child` class

Homework
---------
- Create a simple program showing parent and child relationship with 2 methods.

Students Present
-----------------
- Faizan
- Sahil
- Shaiaan


===========================
Class Log - 21st August 2025 --- Thursday
===========================

< No Class >


===========================
Class Log - 22nd August 2025 --- Friday
===========================

Topics Covered
--------------
- Basic Inheritance Problems

Brief Description
------------------
Solved practical inheritance problems to strengthen understanding:
- **Parent–Child problem** (base class defining methods, child extending functionality)
- **Car problem** (class Car as base, derived classes showing different behaviors)

This session was focused on applying encapsulation and inheritance in small programs.

Examples Solved in Class
-------------------------
- Parent–Child inheritance program
- Car base class with extended models

Homework
---------
- Create a base class `Animal` and derive classes `Dog` and `Cat` with different behaviors.

Students Present
-----------------
- Shanib
- Faizan
- Sahil
- Shaiaan

===========================
Class Log - 23rd August 2025 --- Saturday
===========================

< No Class >


===========================
Class Log - 24th August 2025 --- Sunday
===========================

< No Class >


